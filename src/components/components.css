/**------------ TEMPORARY ------------**/

/*.some_temp_class {...}*/



/**------------ ExplorePage ------------**/

.explore_img {
  height: 200px;
  width: 300px;
  margin: 10px;
}

.image {
  margin: 2em;
  text-align: center;
}

p {
  text-align: center;
} /* TODO: make this a class instead of apply to all p elements */



/**------------ BASIC ITEMS ------------**/

/* Label */

.Label {
  border: 1px solid #CCCCCC;
  border-radius: 14px;
  background-color: #FFFFFF; /* default white background */
  /* as a container */
  display: inline-flex;
  flex-direction: row;
  align-items: center;
  height: 28px;
  padding: 0 12px;
  gap: 8px;
}

.LabelText {
  display: inline-block;
  /* font */
  font-family: "Google Sans",Roboto,Arial,sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 16px;
  line-height: 120%;
  letter-spacing: 0.01em;
}

.LabelList {
  /* as a container*/
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  align-content: flex-start;
  gap: 8px;
}

.FilterList {
  /* as a container*/
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  align-content: flex-start;
  min-height: 30px; /* 28px label height + 2 * 1px border */
  gap: 16px;
}


/* Btn */

.Btn_primary {
  background: #EEEEEE;
  border: 1px solid #CCCCCC;
  border-radius: 8px;
  box-shadow:
    0px 4px 8px rgba(170, 170, 170, 0.16),
    0px 0px 16px rgba(170, 170, 170, 0.08);
  cursor: pointer;
  /* as a container */
  display: inline-flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  padding: 8px 16px;
  gap: 8px;
}

.Btn_secondary {
  border: 1px solid #CCCCCC;
  border-radius: 8px;
  filter:
    drop-shadow(0px 4px 8px rgba(170, 170, 170, 0.16))
    drop-shadow(0px 0px 16px rgba(170, 170, 170, 0.08));
  cursor: pointer;
  /* as a container */
  display: inline-flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  padding: 8px 16px;
  gap: 8px;
}

.Btn_small {
  border: 1px solid #CCCCCC;
  border-radius: 8px;
  filter:
    drop-shadow(0px 4px 8px rgba(170, 170, 170, 0.16))
    drop-shadow(0px 0px 16px rgba(170, 170, 170, 0.08));
  cursor: pointer;
  /* as a container */
  display: inline-flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  padding: 4px;
}


/* Checkbox */

.Checkbox {
  /* as a container */
  display: inline-flex;
  flex-direction: row;
  align-items: center;
  height: 24px;
  gap: 8px;
}

.CheckboxText {
  display: inline-block;
  /* font */
  font-family: "Google Sans",Roboto,Arial,sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 16px;
  line-height: 120%;
  letter-spacing: 0.01em;
  color: #333333;
}

.Checkbox_default {
  visibility: hidden;
  position: relative;
  height: 24px;
  width: 24px;
  cursor: pointer;
}
.Checkbox_default:before {
  visibility: visible;
  content: "";
  position: absolute;
  display: inline-block;
  height: 24px;
  width: 24px;
  border: none;
  background-image: url("../assets/Checkbox_bg.svg");
}
.Checkbox_default:after {  /* :after naturally covers :before */
  visibility: visible;
  content: "";
  position: absolute;
  display: inline-block;
  height: 24px;
  width: 24px;
  mask-image: url("../assets/Checkbox_blank.svg");
  -webkit-mask-image: url("../assets/Checkbox_blank.svg");
  background-color: var(--checkbox-color, #000000);  /* default color: black */
}
.Checkbox_default:checked:after {
  mask-image: url("../assets/Checkbox_checked.svg");
  -webkit-mask-image: url("../assets/Checkbox_checked.svg");
}
.Checkbox_default:disabled:after {
  background-color: #CCCCCC;
}
.Checkbox_default:not(:disabled):hover:after {
  filter: brightness(120%);
}

.Checkbox_checklabel {
  display: none;
  position: relative;
}
.Checkbox_checklabel:checked {
  visibility: hidden;
  display: inline-block;
  /*cursor: pointer;*/
}
.Checkbox_checklabel:checked:after {
  visibility: visible;
  display: inline-block;
  content: "";
  position: absolute;
  top: 50%;
  transform: translateY(-50%); /* vertically center-align for absolute-position element */
  height: 20px;
  width: 14px; /* height and width according to size of CheckLabel_checkmark.svg */
  mask-image: url("../assets/CheckLabel_checkmark.svg");
  -webkit-mask-image: url("../assets/CheckLabel_checkmark.svg");
  background-color: var(--checkbox-color, #000000);  /* default color: black */
}


/* Dropdown */

.Dropdown {
  background: #FFFFFF;
  border: 1px solid #CCCCCC;
  border-radius: 8px;
  padding: 4px 24px 4px 8px;
  min-width: 160px;
  /* font */
  font-family: "Google Sans",Roboto,Arial,sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 16px;
  line-height: 120%;
  letter-spacing: 0.01em;
  color: #333333;
}


/* Search */

.SearchBar {
  /* as an item */
  align-self: stretch;
  /* as a container */
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  padding: 8px 12px 8px 16px;
  gap: 8px;
  background: #FFFFFF;
  border: 1px solid #CCCCCC;
  border-radius: 8px;
}

.SearchBarInput {
  border: none;
  outline: none;
  background-color: transparent;
  flex: 1;
}

.SearchRange_expanded {
  /* as an item */
  align-self: stretch;
  /* as a container */
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 8px;
}

.SearchRange_collapsed {
  /* as an container */
  display: flex;
  flex-direction: row;
  align-items: baseline;
  /*align-items: center;*/
  gap: 16px;
}

.SearchRangeHeader {
  /* as an item */
  align-self: stretch;
  /* as a container */
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  gap: 8px;
}

.SearchRangeCheckboxes {
  /* as an item */
  align-self: stretch;
  /* as a container */
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-gap: 0;
}

.SearchRangeCheckbox {
  /* as an item */
  grid-column: span 1;
}

.SearchRangeDots { /* array of dots */
  /* as a container */
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 8px;
}

.SearchRangeDot { /* a single dot */
  content: "";
  width: 8px;
  height: 8px;
  border-radius: 100%;
}


/* Humanfigure */

.ModalityDisplay {
  /* as a container */
  display: flex;
  flex-direction: row;
  align-content: flex-start;
}

.ModalityDisplay_statelist {
  /* as an item */
  width: 240px;
  /* as a container */
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 8px;
}

.ModalityDisplay_state {
  /* as an item */
  width: 100%;
  /* as a container */
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  justify-content: space-between;
}

.Humanfigure_container {
  /*margin-top: -275px; /* to correct for the top margin caused by svg? TODO: improve*/
  position: relative;
  height: 250px;
  width: 250px;
}

/* reference: https://stackoverflow.com/questions/6300635/how-to-make-an-element-transparent-to-clicks-but-still-visible */
.Humanfigure_outline {
  position: absolute;
  margin-left: 58.5px;
  top: 36px;
  /*top: 278px;*/
  z-index: 1;
  pointer-events: none;
  /*height: 120%;
  width: auto;*/
}

.Humanfigure_highlights {
  position: absolute;
  width: 250px;
  padding-top: 10px;
  height: 250px;
  display: block;
  margin: 40px auto;
}

.Humanfigure_highlights svg:hover {
  cursor: pointer;
}

.Humanfigure_highlights svg:hover path {
  filter: brightness(120%);
}

.Humanfigure_highlights svg.selected path {
  fill: #ED5564;
}

.Humanfigure_highlights svg {
  position: absolute;
  left: 50%;
  /*fill: #E3735E;*/
}

.Humanfigure_highlights svg#head {
  margin-left: -25.4px;
  top: -5px;
}
.Humanfigure_highlights svg#l_arm {
  margin-left: -50px;
  top: 58px;
}
.Humanfigure_highlights svg#r_arm {
  margin-left: 13.5px;
  top: 58px;
}
.Humanfigure_highlights svg#l_hand {
  margin-left: -66.7px;
  top: 109px;
}
.Humanfigure_highlights svg#r_hand {
  margin-left: 36.5px;
  top: 109px;
}
.Humanfigure_highlights svg#facial_expression {
  margin-left: -17.5px;
  top: 1px;
}
.Humanfigure_highlights svg#eyes {
  margin-left: -15.5px;
  top: 20px;
}
.Humanfigure_highlights svg#voice {
  margin-left: -9.5px;
  top: 38px;
}
.Humanfigure_highlights svg#legs {
  margin-left: -25.4px;
  top: 120px;
}
.Humanfigure_highlights svg#feet {
  margin-left: -26.5px;
  top: 215px;
}


/* DescriptionHover */

.DescriptionHover {
  /* as a container */
  display: inline-flex;
  flex-direction: row;
  align-items: center;
  gap: 12px; /* 4px gap + 8px arrow width */
}

.DescriptionBtn {
  align-items: center;
  appearance: none;
  background-color: #fff;
  border-radius: 24px;
  border-style: none;
  /* box-shadow: rgba(0, 0, 0, .2) 0 3px 5px -1px,rgba(0, 0, 0, .14) 0 6px 10px 0,rgba(0, 0, 0, .12) 0 1px 18px 0; */
  box-shadow: rgb(70, 99, 162) 0 0px 2px 0;
  box-sizing: border-box;
  color: #3c4043;
  cursor: help; /*cursor: pointer;*/
  display: inline-flex;
  fill: currentcolor;
  font-family: "Google Sans",Roboto,Arial,sans-serif;
  font-size: 10px;
  font-weight: 500;
  height: 14px;
  justify-content: center;
  letter-spacing: .25px;
  line-height: 100%;
  max-width: 100%;
  overflow: visible;
  padding: 2px 4px;
  position: relative;
  text-align: center;
  /*text-transform: none;
  transition: box-shadow 280ms cubic-bezier(.4, 0, .2, 1),opacity 15ms linear 30ms,transform 270ms cubic-bezier(0, 0, .2, 1) 0ms;
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
  width: auto;
  will-change: transform,opacity;*/
}

.DescriptionBtn:hover {
  background: #F6F9FE;
  color: #174ea6;
}

.DescriptionBtn:hover ~ .DescriptionTextBox_container {
  display: inline-flex;
}

.DescriptionTextBox_container { /* position constrainer of DescriptionTextBox */
  display: none; /* hidden by default */
  /*display: inline-flex; /*DEBUG*/
  z-index: 10; /* top layer */
  /* as a container */
  position: relative;
  align-items: center;
  max-width: 200px; /* TODO: better width */
  height: 0px; /* constrain vertical position */
}

.DescriptionTextBox {
  /* as a container */
  display: flex;
  flex-direction: row;
  align-items: center;
  padding: 4px 8px;
  background-color: #EEEEEE;
  border-radius: 2px;
}

/* reference: https://blog.logrocket.com/creating-beautiful-tooltips-with-only-css/ */
.DescriptionTextBox:after {  /* little triangle arrow */
  content: "";
  border: 8px solid;
  border-color: transparent #EEEEEE transparent transparent; /* matches background color of the textbox */
  position: absolute;  
  left: -15px; 
  transform: translateY(-50%);
  top: 50%;
}

.DescriptionText {
  pointer-events: none; /* make transparent for clicking */
  /* as an item */
  flex-grow: 1;
  align-self: stretch;
  /* font */
  font-family: "Google Sans",Roboto,Arial,sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 14px;
  line-height: 120%;
  letter-spacing: 0.01em;
  color:#3c4043d7
}



/**------------ BIG BLOCKS ------------**/

/* PageBox */
.PageBox {
  /* as a container */
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  padding-top: 40px;
}


/* WaitingRoom */

.WaitingRoom {
  height: calc(100vh - 40px); /* minus height of Navbar */
  overflow: scroll;
  /* as an item */
  flex-grow: 1;
}

.WaitingRoomControl {
  /*position: absolute;
  left: 0;
  top: 0;
  align-self: stretch;*/
  /* as a container */
  background-color: #FFFFFF;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: flex-end;
  padding: 24px 40px;
}

.WaitingRoomControl_addpic {
  /* as a container */
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 24px;
}

.WaitingRoomControl_selectpic {  /* right now same as WaitingRoomControl_addpic */
  /* as a container */
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 24px;
}

.WaitingRoomGallery {
  /* as a container */
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  align-items: flex-start;
  padding: 24px 40px 40px;
  gap: 24px 12px; /* TODO: ??? */
}

.WaitingPic {
  max-width: 300px;
  max-height: 200px;
  object-fit: contain;
}
.WaitingPic[src=""] {
  display: none;
}


/* LabelsForm */

.LabelsForm {
  /*position: absolute;
  right: 0;
  top: 0;*/
  height: calc(100vh - 40px); /* minus height of Navbar */
  overflow: scroll;
  width: 40vw;
  max-width: 960px;
  min-width: 560px;
  border-left: 1px solid #CCCCCC; /* TODO: dropshadow */
  /* as an item */
  flex-grow: 0;
  /* as a container */
  background-color: #FFFFFF;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

.FormCategory {
  border-bottom: 1px solid #CCCCCC;
  /* as an item */
  align-self: stretch;
  /* as a container */
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  padding: 24px;
  gap: 16px;
}

.CategoryHeader {
  /* as a container */
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 8px;
}

.CategoryName {
  /* font */
  font-family: "Google Sans",Roboto,Arial,sans-serif;
  font-style: normal;
  font-weight: 500;
  font-size: 18px;
  line-height: 120%;
  letter-spacing: 0.01em;
  filter: brightness(80%); /* darkern the colors a bit for readability */
}

.FormSubcategories {  /* container for all subcategories */
  /* as a container */
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 16px;
}

.FormSubcategory {
  /* as a container */
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 8px;
}

.SubcategoryHeader {  /* right now same as CategoryHeader */
  /* as a container */
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 8px;
}

.SubcategoryName {
  /* font */
  font-family: "Google Sans",Roboto,Arial,sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 16px;
  line-height: 120%;
  letter-spacing: 0.01em;
  color: #AAAAAA;
}


/* Facet */

.Facet {
  /*position: absolute;
  left: 0px;
  top: 0px;*/
  height: calc(100vh - 40px); /* minus height of Navbar */
  overflow: scroll;
  width: 25vw;
  max-width: 640px;
  min-width: 400px;
  border-right: 1px solid #CCCCCC; /* TODO: dropshadow */
  /*box-shadow:
    8px 0px 16px rgba(170, 170, 170, 0.16),
    0px 0px 40px 8px rgba(204, 204, 204, 0.25);*/
  /* as an item */
  flex-grow: 0;
  /* as a container (module layout) */
  background-color: #FFFFFF;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

.FacetModule {  /* right now same as FormCategory */
  /* as an item */
  border-bottom: 1px solid #CCCCCC;
  align-self: stretch;
  /* as a container */
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  padding: 24px;
  gap: 24px;
}

.FacetSubsections {  /* container for all subsections, right now same as FormSubcategories */
  /* as a container */
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 16px;
}

.FacetSubsection {  /* right now same as FormSubcategories */
  /* as a container */
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 8px;
}

.FacetSubsectionName {  /* right now font is same as SubcategoryName */
  display: inline-block;
  /* font */
  font-family: "Google Sans",Roboto,Arial,sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 16px;
  line-height: 120%;
  letter-spacing: 0.01em;
  color: #AAAAAA;
}

.AppliedFiltersHeader {  /* right now same as CategoryHeader. TODO: add btns: rearrange, clear all */
  /* as a container */
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 8px;
}

.AppliedFiltersTitle {
  /* font */
  font-family: "Google Sans",Roboto,Arial,sans-serif;
  font-style: normal;
  font-weight: 500;
  font-size: 18px;
  line-height: 120%;
  letter-spacing: 0.01em;
  color: #000000;
}

.AppliedFiltersCount {
  /* font */
  font-family: "Google Sans",Roboto,Arial,sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 18px;
  line-height: 120%;
  letter-spacing: 0.01em;
  color: #000000;
}


/* Navbar */

.Navbar {
  position: fixed;
  left: 0px;
  top: 0px;
  height: 40px;
  width: 100vw;
  /* as a container */
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  padding: 0px;
  gap: 64px;
  background: #FFFFFF;
  border-bottom: 1px solid #CCCCCC;
}

.Navtab {
  /* as an element */
  flex-grow: 0;
  /* as a container */
  display: inline-flex;
  justify-content: center;
  align-items: center;
  padding: 4px;
  /* font */
  font-family: "Google Sans",Roboto,Arial,sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 18px;
  line-height: 150%;
  letter-spacing: 0.01em;
  color: #000000;
  text-decoration-line: none;
}
.Navtab.active {
  font-weight: 700;
  letter-spacing: 0.003em;
  text-decoration-line: underline;
}
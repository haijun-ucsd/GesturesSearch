/**
 * references:
 *  https://gist.github.com/lopspower/03fb1cc0ac9f32ef38f4
 *  https://stackoverflow.com/questions/15831657/creating-css-global-variables-stylesheet-theme-management
 *  https://stackoverflow.com/questions/40010597/how-do-i-apply-opacity-to-a-css-color-variable
 *	https://www.w3schools.com/cssref/sel_attribute_value.asp
 *	https://stackoverflow.com/questions/7699621/display-image-at-50-of-its-native-size
 */


/**------------ STYLESHEET ------------**/

:root {
	--img-container-bg: rgb(234, 197, 197);
	--link-color: #A9C7D9;
	--green-btn: #A0D568;
	--demographic-color: #ED5564; --demographic-color-semitrans: #ED556480; /*#XXXXXX40 for 25% opacity */
	--spectators-color: #FFCE54; --spectators-color-semitrans: #FFCE5480;
	--location-color: #A0D568; --location-color-semitrans: #A0D56880;
	--posture-color: #AC92EB; --posture-color-semitrans: #AC92EB80;
	--modality-color: #4FC1E8; --modality-color-semitrans: #4FC1E880;
	--available-modality-color: #A0D568; /* right now same green as Location */
	--occupied-modality-color: #ED5564; /* right now same red as Demographic */
	--white: #FFFFFF;
	--black: #000000;
	--faded-black: #333333;
	--gray-dark: #AAAAAA;
	--gray-solid: #666666;
	--gray-mid: #CCCCCC;
	--gray-light: #EEEEEE;
	--gray-bg: #EDECED;
	--pic-width: 200px; /* value should be changed together along the "GalleryColumn_helper" function in components.js. */
	--header-font-size: 16px;
	--body-font-size: 14px;
}


/**------------ TEMPORARY ------------**/

/*.some_temp_class {...}*/



/**------------ BASIC ITEMS ------------**/

/* Hidden div */

.Hidden_outer {
  overflow: hidden;
  position: relative;
}

.Hidden_inner {
  position: absolute;
  top: 0; left: 0;
}


/* Texts */

.HintText {  /* right now font is same as SubsectionName */
	/*flex: 0 0 auto; /* no wrap */
	display: inline-block;
	/* font */
	font-family: "Google Sans",Roboto,Arial,sans-serif;
	font-style: normal;
	font-weight: 400;
	font-size: var(--body-font-size);
	line-height: 120%;
	letter-spacing: 0.01em;
	color: var(--gray-dark);
	/* as a container */
	display: inline-flex;
	flex-direction: row;
	align-items: center;
	gap: 8px;
}

.HintTextWithIcon_container {
	display: flex;
	flex-direction: row;
	align-items: center;
	gap: 8px;
}


/* SeparationLine (note that these are default cases, color might differ according to inline styles) */
.SeparationLine_H {
	border-top: 1px solid var(--gray-mid);
	align-self: stretch;
	flex-grow: 0;
}
.SeparationLine_V {
	border-left: 1px solid var(--gray-mid);
	align-self: stretch;
	flex-grow: 0;
}


/* Label (note that these are only the default, color might change with inline styles according to categories) */

.Label {
	border: 1px solid var(--gray-mid);
	border-radius: 14px;
	background-color: transparent; /* default transparent background */
	/* as an item */
	flex: 0 0 auto; /* no squeeze or stretch */
	/* as a container */
	display: inline-flex;
	flex-direction: row;
	align-items: center;
	height: 28px;
	padding: 4px 12px;
	gap: 8px;
}

.CheckLabel {
	cursor: pointer;
}
.CheckLabel:hover {
	filter: brightness(60%); /* hover to darken */
}

.RemovableLabel_removebtn:hover {
	filter: brightness(60%); /* hover to darken */
}

.LabelText {
	display: inline-block;
	flex: 0 0 auto; /* no wrap */
	/* font */
	font-family: "Google Sans",Roboto,Arial,sans-serif;
	font-style: normal;
	font-weight: 400;
	font-size: var(--body-font-size);
	line-height: 120%;
	letter-spacing: 0.01em;
}

.LabelList {
	/* as a container*/
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	align-content: flex-start;
	gap: 8px;
}


/* Btn */

.Btn {
	cursor: pointer;
}

.Btn_primary {
	background: var(--gray-light);
	border: 1px solid var(--gray-mid);
	border-radius: 8px;
	box-shadow:
		0px 4px 8px rgba(170, 170, 170, 0.16),
		0px 0px 16px rgba(170, 170, 170, 0.08);
	cursor: pointer;
	/* as a container */
	display: inline-flex;
	flex-direction: row;
	justify-content: center;
	align-items: center;
	padding: 8px 16px;
	gap: 8px;
}
.Btn_primary:not(:disabled):hover {
	background: var(--gray-bg);
	box-shadow: none;
}
.Btn_primary:disabled {
	background: var(--gray-bg);
	box-shadow: none;
	cursor: auto;
}

.Btn_secondary {
	border: 1px solid var(--gray-mid);
	border-radius: 8px;
	box-shadow:
		0px 4px 8px rgba(170, 170, 170, 0.16),
		0px 0px 16px rgba(170, 170, 170, 0.08);
	cursor: pointer;
	/* as a container */
	display: inline-flex;
	flex-direction: row;
	justify-content: center;
	align-items: center;
	padding: 8px 16px;
	gap: 8px;
}
.Btn_secondary:not(:disabled):hover {
	background: var(--gray-bg);
	box-shadow: none;
}
.Btn_secondary:disabled {
	background: var(--gray-bg);
	box-shadow: none;
	cursor: auto;
}

.Btn_small {
	border: 1px solid var(--gray-mid);
	border-radius: 8px;
	box-shadow:
		0px 4px 8px rgba(170, 170, 170, 0.16),
		0px 0px 16px rgba(170, 170, 170, 0.08);
	cursor: pointer;
	/* as a container */
	display: inline-flex;
	flex-direction: row;
	justify-content: center;
	align-items: center;
	padding: 4px;
}
.Btn_small:not(:disabled):hover {
	background: var(--gray-bg);
	box-shadow: none;
}
.Btn_small:disabled {
	background: var(--gray-bg);
	box-shadow: none;
	cursor: auto;
}

.Btn_green {
	background: #F7FCF3; /* = var(--green-btn) with 8% opacity on white background */
	border: 1px solid var(--green-btn);
}
.Btn_green:not(:disabled):hover {
	background: #F7FCF3;
}

.Link {
	cursor: pointer;
	color: var(--link-color);
	text-decoration: none;
}
.Link:not(:disabled):hover {
	filter: brightness(110%);
	text-decoration: underline;
}
.Link:disabled {
	background: var(--gray-bg);
	cursor: auto;
}



/* Checkbox */

.Checkbox {
	/* as a container */
	display: inline-flex;
	flex-direction: row;
	align-items: center;
	height: 24px;
	gap: 8px;
}

.CheckboxText {
	display: inline-block;
	cursor: pointer;
	/* font */
	font-family: "Google Sans",Roboto,Arial,sans-serif;
	font-style: normal;
	font-weight: 400;
	font-size: var(--body-font-size);
	line-height: 120%;
	letter-spacing: 0.01em;
	color: var(--faded-black);
}

.Checkbox_default {
	visibility: hidden;
	position: relative;
	height: 24px;
	width: 24px;
	cursor: pointer;
}
.Checkbox_default::before {
	visibility: visible;
	content: "";
	position: absolute;
	display: inline-block;
	height: 24px;
	width: 24px;
	border: none;
	background-image: url("../assets/Checkbox_bg.svg");
}
.Checkbox_default::after {  /* ::after naturally covers ::before */
	visibility: visible;
	content: "";
	position: absolute;
	display: inline-block;
	height: 24px;
	width: 24px;
	mask-image: url("../assets/Checkbox_blank.svg");
	-webkit-mask-image: url("../assets/Checkbox_blank.svg");
	background-color: var(--checkbox-color, var(--gray-solid));  /* default color: gray */
}
.Checkbox_default:checked::after {
	mask-image: url("../assets/Checkbox_checked.svg");
	-webkit-mask-image: url("../assets/Checkbox_checked.svg");
}
.Checkbox_default:disabled::after {
	background-color: var(--gray-mid);
}
.Checkbox_default:not(:disabled):hover::after {
	background-color: var(--black); /* hover to darken */
}

.Checkbox_checklabel {
	display: none;
	position: relative;
}
.Checkbox_checklabel:checked {
	visibility: hidden;
	display: inline-block;
}
.Checkbox_checklabel:checked:after {
	visibility: visible;
	display: inline-block;
	content: "";
	position: absolute;
	top: 50%;
	transform: translateY(-50%); /* vertically center-align for absolute-position element */
	height: 20px;
	width: 14px; /* height and width according to size of CheckLabel_checkmark.svg */
	mask-image: url("../assets/CheckLabel_checkmark.svg");
	-webkit-mask-image: url("../assets/CheckLabel_checkmark.svg");
	background-color: var(--checkbox-color, var(--gray-solid));  /* default color: gray */
}

.Checkbox_spectrum_container { /* should have â‰¥2 children elements in this flex */
	/* as an item */
	align-self: stretch;
	/* as a container */
	position: relative;
	display: flex;
	flex-direction: row;
	justify-content: space-between;
	align-items: flex-start;
}
.Checkbox_spectrum_container::before {  /* ::before naturally covers :before */
	content: "";
	border-bottom: 2px solid var(--gray-mid);
	position: absolute;
	transform: translateY(-50%);
	top: 12px; /* = 24/2, 24px is the height of one checkbox */
	height: 0px;
	left: 8px;
	right: 8px;
}
.Checkbox_spectrum {
	/* as a container */
	display: inline-flex;
	flex-direction: column;
	align-items: center;
	width: 24px; /* height & width of one checkbox */
	gap: 8px;
}


/* Dropdown */

.Dropdown {
	background: var(--white);
	border: 1px solid var(--gray-mid);
	border-radius: 8px;
	padding: 4px 24px 4px 8px;
	min-width: 160px;
	min-height: 32px;
	/* font */
	font-family: "Google Sans",Roboto,Arial,sans-serif;
	font-style: normal;
	font-weight: 400;
	font-size: var(--body-font-size);
	line-height: 120%;
	letter-spacing: 0.01em;
	color: var(--faded-black);
	cursor: pointer;
}


/* Search */

.SearchBar {
	/* as an item */
	align-self: stretch;
	/* as a container */
	display: flex;
	flex-direction: row;
	align-items: flex-start;
	padding: 8px 12px;
	background: var(--white);
	border: 1px solid var(--gray-mid);
	border-radius: 8px;
	gap: 8px;
}


.SearchBar_container {
	/* as an item */
	align-self: stretch;
	/* as a container */
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	gap: 16px;
}

.SearchBarInput {
	border: none;
	outline: none;
	background-color: transparent;
	flex: 1;
	max-height: 48px; /* max 2 lines */
	overflow-y: scroll;
}

.SearchBarInput_container {
	/* as an item */
	align-self: stretch;
	/* as a container */
	display: flex;
	flex-direction: row;
	justify-content: space-between;
	align-items: center;
}

::placeholder { /* searchbar placeholder text color */
	color: var(--gray-mid); /* Firefox */
	opacity: 1;
}
:-ms-input-placeholder { /* Internet Explorer 10-11 */
 color: var(--gray-mid);
}
::-ms-input-placeholder { /* Microsoft Edge */
 color: var(--gray-mid);
}

.SearchBar_clearbtn:hover {
	filter: brightness(60%);
}

.SearchBar_searchbtn:hover {
	filter: invert(40%); /* brighten black img */
}

.SearchBar_highlighter { border-radius: 100px; }
.SearchBar_highlighter_demographic { background-color: var(--demographic-color-semitrans); }
.SearchBar_highlighter_spectators { background-color: var(--spectators-color-semitrans); }
.SearchBar_highlighter_location { background-color: var(--location-color-semitrans); }
.SearchBar_highlighter_posture { background-color: var(--posture-color-semitrans); }
.SearchBar_highlighter_modality { background-color: var(--modality-color-semitrans); }

.SearchBar_rec_container {
	/* as an item */
	align-self: stretch;
	/* as a container */
	position: relative;
}

.SearchBarRecommendations {
	/* as an item */
	align-self: stretch;
	/* as a container */
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	gap: 8px;
	padding-top: 8px;
	border-top: 1px solid var(--gray-mid);
}

.SearchBarRecommendations_category {
	/* as an item */
	align-self: stretch;
	/* as a container */
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	gap: 4px;
}

.SearchBar_noresult {
	/* as an item */
	align-self: stretch;
	/* as a container */
	display: flex;
	align-items: flex-start;
	padding: 4px;
}

.SearchRange_expanded {
	/* as an item */
	align-self: stretch;
	/* as a container */
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	gap: 8px;
}

.SearchRange_collapsed {
	/* as an container */
	display: flex;
	flex-direction: row;
	align-items: baseline;
	/*align-items: center;*/
	gap: 16px;
}

.SearchRangeHeader {
	/* as an item */
	align-self: stretch;
	/* as a container */
	display: flex;
	flex-direction: row;
	justify-content: space-between;
	align-items: center;
	gap: 8px;
}

.SearchRangeCheckboxes {
	/* as an item */
	align-self: stretch;
	/* as a container */
	display: grid;
	grid-template-columns: repeat(2, 1fr);
	grid-gap: 0;
}

.SearchRangeCheckbox {
	/* as an item */
	grid-column: span 1;
}

.SearchRangeDots { /* array of dots */
	/* as a container */
	display: flex;
	flex-direction: row;
	align-items: center;
	gap: 8px;
}

.SearchRangeDot { /* a single dot */
	content: "";
	width: 8px;
	height: 8px;
	border-radius: 100%;
}


/* SearchableDropdown (SD) */

.SearchableDropdown {
	/* as an item */
	align-self: stretch;
	/* as a container */
	position: relative;
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	padding: 8px;
	gap: 16px;
	border: 1px solid var(--gray-mid);
	border-radius: 8px;
}

.SearchableDropdown_ecbtn { /* expand-collapse btn */
	position: absolute;
	top: 10px; /* ((28 + 2 * 8) - 24) / 2 = 10 */
	right: 4px;
}

.SDSelectedLabelList_collapsed {
	/* as an item */
	align-self: stretch;
	/* as a container */
	display: flex;
	flex-direction: row;
	height: 28px; /* label height = 28px, no wrapping because only 1 row is allowed when drop-down is collapsed */
	align-items: flex-start;
	padding: 0px;
	gap: 8px;
	border: none;
	outline: none;
	margin-right: 32px; /* arrow btn width 24 + gap 8 = 32 */
	overflow-x: hidden;
}

.SDSelectedLabelList_expanded {  /* right now same as LabelList */
	/* as an item */
	align-self: stretch;
	/* as a container */
	display: flex;
	flex-direction: row;
	min-height: 28px; /*label height*/
	flex-wrap: wrap;
	align-items: flex-start;
	padding: 0px;
	gap: 8px;
	border: none;
	outline: none;
	margin-right: 24px; /* arrow btn width 24 */
}

.CustomizeLabel_container {
	/* as an item */
	align-self: stretch;
	/* as a container */
	display: flex;
	flex-direction: row;
	align-items: center;
	justify-content: space-between;
	padding: 8px 4px 0px;
	border-top: 1px solid var(--gray-mid);
	gap: 16px;
}

.CustomizeLabel_hint { /* to help break too long words into multiple lines */
	overflow-wrap: anywhere;
}


/* Humanfigure */

.ModalityDisplay {
	/* as a container */
	display: flex;
	flex-direction: row;
	align-content: flex-start;
}

.ModalityDisplay_statelist {
	/* as an item */
	width: 240px;
	/* as a container */
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	gap: 8px;
}

.ModalityDisplay_state {
	/* as an item */
	width: 100%;
	/* as a container */
	display: flex;
	flex-direction: row;
	align-items: flex-start;
	justify-content: space-between;
}

.Humanfigure_container {
	/*margin-top: -275px; /* to correct for the top margin caused by svg? TODO: improve*/
	position: relative;
	height: 250px;
	width: 250px;
	margin-left: -46.5px; /*TODO*/
}

/* reference: https://stackoverflow.com/questions/6300635/how-to-make-an-element-transparent-to-clicks-but-still-visible */
.Humanfigure_outline {
	position: absolute;
	margin-left: 58.5px;
	top: 36px;
	/*top: 278px;*/
	z-index: 1;
	pointer-events: none;
	/*height: 120%;
	width: auto;*/
}

.Humanfigure_highlights {
	position: absolute;
	width: 250px;
	padding-top: 10px;
	height: 250px;
	display: block;
	margin: 40px auto;
}

.Humanfigure_highlights svg:hover {
	cursor: pointer;
}
.Humanfigure_highlights svg:hover path {
	filter: brightness(120%);
}

.Humanfigure_highlights svg.available path {
	fill: var(--available-modality-color);
}
.Humanfigure_highlights svg.unavailable path {
	fill: var(--occupied-modality-color);
}
.Humanfigure_highlights svg.any path {
	fill: #F1FAFD; /* = var(--modality-color) with 8% opacity on white background */
}

.Humanfigure_highlights svg {
	position: absolute;
	left: 50%;
}

.Humanfigure_highlights svg#head {
	margin-left: -25.4px;
	top: -5px;
}
.Humanfigure_highlights svg#l_arm {
	margin-left: -50px;
	top: 58px;
}
.Humanfigure_highlights svg#r_arm {
	margin-left: 13.5px;
	top: 58px;
}
.Humanfigure_highlights svg#l_hand {
	margin-left: -66.7px;
	top: 109px;
}
.Humanfigure_highlights svg#r_hand {
	margin-left: 36.5px;
	top: 109px;
}
.Humanfigure_highlights svg#facial_expression {
	margin-left: -17.5px;
	top: 1px;
}
.Humanfigure_highlights svg#eyes {
	margin-left: -15.5px;
	top: 20px;
}
.Humanfigure_highlights svg#voice {
	margin-left: -9.5px;
	top: 38px;
}
.Humanfigure_highlights svg#legs {
	margin-left: -25.4px;
	top: 120px;
}
.Humanfigure_highlights svg#feet {
	margin-left: -26.5px;
	top: 215px;
}


/* RequiredField indicator */
.RequiredField {
	color: #ED556480; /* same red as Demographic, #XXXXXX80 = 50% opacity */
}


/* DescriptionHover */

.DescriptionHover {
	/* as a container */
	display: inline-flex;
	flex-direction: row;
	align-items: center;
	gap: 12px; /* 4px gap + 8px arrow width */
}

.DescriptionBtn {
	align-items: center;
	appearance: none;
	background-color: #fff;
	border-radius: 24px;
	border-style: none;
	/* box-shadow: rgba(0, 0, 0, .2) 0 3px 5px -1px,rgba(0, 0, 0, .14) 0 6px 10px 0,rgba(0, 0, 0, .12) 0 1px 18px 0; */
	box-shadow: rgb(70, 99, 162) 0 0px 2px 0;
	box-sizing: border-box;
	color: #3c4043;
	cursor: help; /*cursor: pointer;*/
	display: inline-flex;
	fill: currentcolor;
	font-family: "Google Sans",Roboto,Arial,sans-serif;
	font-size: 10px;
	font-weight: 500;
	height: 14px;
	justify-content: center;
	letter-spacing: .25px;
	line-height: 100%;
	max-width: 100%;
	overflow: visible;
	padding: 2px 4px;
	position: relative;
	text-align: center;
	/*text-transform: none;
	transition: box-shadow 280ms cubic-bezier(.4, 0, .2, 1),opacity 15ms linear 30ms,transform 270ms cubic-bezier(0, 0, .2, 1) 0ms;
	user-select: none;
	-webkit-user-select: none;
	touch-action: manipulation;
	width: auto;
	will-change: transform,opacity;*/
}
.DescriptionBtn:hover {
	background: #F6F9FE;
	color: #174ea6;
}

.Description_elementtohover {
	flex: 0 0 auto;
}
.Description_elementtohover:hover ~ .DescriptionTextBox_container {
	display: inline-flex;
}

.DescriptionTextBox_container { /* position constrainer of DescriptionTextBox */
	display: none; /* hidden by default */
	/*display: inline-flex; /*DEBUG*/
	z-index: 10; /* top layer */
	/* as a container */
	position: relative;
	align-items: center;
	max-width: 240px;
	min-width: 160px;
	/* TODO: better max-width and min-width */
	height: 0px; /* constrain vertical position */
}

.DescriptionTextBox {
	/* as a container */
	display: flex;
	flex-direction: row;
	align-items: center;
	padding: 4px 8px;
	background-color: var(--desbox-color, var(--gray-light));
	border-radius: 2px;
}

/* reference: https://blog.logrocket.com/creating-beautiful-tooltips-with-only-css/ */
.DescriptionTextBox:after {  /* little triangle arrow */
	content: "";
	border: 8px solid;
	border-color: transparent var(--desbox-color, var(--gray-light)) transparent transparent; /* matches background color of the textbox */
	position: absolute;  
	left: -15px; 
	transform: translateY(-50%);
	top: 50%;
}

.DescriptionText {
	pointer-events: none; /* make transparent for clicking */
	/* as an item */
	flex-grow: 1;
	align-self: stretch;
	/* font */
	font-family: "Google Sans",Roboto,Arial,sans-serif;
	font-style: normal;
	font-weight: 400;
	font-size: 14px;
	line-height: 120%;
	letter-spacing: 0.01em;
	color:#3c4043d7
}


/* Accordion: Module & AccordionSection */

.Module {  /* non-collapsable */
	/* as an item */
	align-self: stretch;
	/* as a container */
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	padding: 24px;
	gap: 24px;
	border-bottom: 1px solid var(--gray-mid);
}

.ModuleHeaderBar {
	/* as an item */
	align-self: stretch;
	/* as a container */
	display: flex;
	flex-direction: row;
	justify-content: space-between;
	align-items: center;
	gap: 8px;
}

.AccordionSection {
	/* as an item */
	align-self: stretch;
	/* as a container */
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	padding: 16px 24px;
	gap: 16px;
	border-bottom: 1px solid var(--gray-mid);
}

.AccordionSectionHeaderBar {  /* right now the same as ModuleHeaderBar */
	/* as an item */
	align-self: stretch;
	/* as a container */
	display: flex;
	flex-direction: row;
	justify-content: space-between;
	align-items: center;
	gap: 8px;
}

.SectionHeader {  /* section name + description. right now same as CategoryHeader */
	/* as a container */
	display: flex;
	flex-direction: row;
	align-items: center;
	gap: 8px;
}

.SectionName {  /* right now same as CategoryName */
	/* as an item */
	flex: 0 0 auto; /* no wrap */
	/* font */
	font-family: "Google Sans",Roboto,Arial,sans-serif;
	font-style: normal;
	font-weight: 500;
	font-size: var(--header-font-size);
	line-height: 120%;
	letter-spacing: 0.01em;
	color: var(--black); /* default color: black */
	filter: brightness(80%); /* darkern the colors a bit for readability */
	/* as a container */
	display: inline-flex;
	flex-direction: row;
	align-items: flex-start;
	gap: 2px;
}

.Subsections {  /* container for all subsections, right now same as FormSubcategories */
	/* as an item */
	align-self: stretch;
	/* as a container */
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	gap: 16px;
}

.Subsection {  /* right now same as FormSubcategories */
	/*as an item */
	align-self: stretch;
	/* as a container */
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	gap: 8px;
}

.SubsectionName {  /* right now font is same as SubcategoryName */
	/* as an item */
	flex: 0 0 auto; /* no wrap */
	/* font */
	font-family: "Google Sans",Roboto,Arial,sans-serif;
	font-style: normal;
	font-weight: 400;
	font-size: var(--body-font-size);
	line-height: 120%;
	letter-spacing: 0.01em;
	color: var(--gray-dark);
	/* as a container */
	display: inline-flex;
	flex-direction: row;
	align-items: flex-start;
	gap: 2px;
}


/* Gallery */

.Gallery {
	/* as an item */
	align-self: stretch;
	flex-grow: 1;
	/* as a container */
	overflow-y: scroll;
	position: relative;
	display: flex;
	flex-direction: row-reverse; /* need row-reverse to correct for the rendering of gallery columns */
	align-items: flex-start;
	justify-content: center;
	padding: 24px 40px 40px;
	gap: 24px;
	min-width: calc(2 * var(--pic-width) + 24px + 2 * 40px); /* minimal two columns */
}

.GalleryColumn {
	display: flex;
	flex-direction: column;
	gap: 24px;
}
.GalleryColumn[style] { /* to override inline style */
	width: var(--pic-width) !important;
}



/**------------ BIG BLOCKS ------------**/

/* PageBox */

.PageBox {
	/* as a container */
	display: flex;
	/* flex-direction according to specific page */
	align-items: flex-start;
	padding-top: 40px;
	/*float:right;
	margin-right:0;*/
}

.PageBox_Login {
	flex-direction: column;
}

.PageBox_Upload {
	flex-direction: column;
}

section {
	height: 100%;
	width: 100%;
	display:inline-block;
}
*{
padding:0px;
margin:0px;
}

.PageBox_Explore {
	flex-direction: row;
}

/* LogIn Page*/
.Login_body{
    -webkit-tap-highlight-color: transparent;
    color: #d93025;
    font-family: roboto,"Noto Sans Myanmar UI",arial,sans-serif;
    direction: ltr;
    font-size: 60px;
    line-height: 1;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
	height:80vh;
    position: relative;
	margin: auto;
}

.Login_box{
	-webkit-tap-highlight-color: transparent;
    color: #bf98f6;
    font-family: roboto,"Noto Sans Myanmar UI",arial,sans-serif;
    font-size: 22px;
    line-height: 1.5;
    flex-direction: row;
	width: 600px;
    max-width: 100%;
    position: relative;
    z-index: 2;
    transition: .2s;
    background: #fff;
    border: 1px solid #3b68c1;
    border-radius: 8px;
    display: block;
    flex-shrink: 0;
    margin: auto;
	height: 80vh;
	box-sizing: border-box;
	margin-top: 10% ;
	padding:10%;
}

/*input[type="text"],
input[type="password"],
button,
textarea {
  font-family: 'Nunito', sans-serif;
  font-size: 22px;
  padding: 0.25rem;
  border-radius: 0.5rem;
  display: block;
}

label,
button {
  margin-top: 1rem;
  font-size: 22px;
  display: block;
  margin:auto;
}

button {
  padding: 0.5rem;
  display:block;
  margin-top:5px;
}*/

.errmsg {
    background-color: lightpink;
    color: firebrick;
    font-weight: bold;
    padding: 0.5rem;
    margin-bottom: 0.5rem;
}

.successmsg {
    background-color: rgb(202,253,243);
    color: lightseagreen;
    font-weight: bold;
    padding: 0.5rem;
    margin-bottom: 0.5rem;
}

.login_navbar {
	position: absolute;
	z-index: 10;
	border: 1px solid var(--gray-mid);
	border-radius: 0px;
	background-color: #FFFFFF;
	cursor: pointer;
	font-size: large;
	height: 40px;
	width: 100px;
	/* as a container */
	display: inline-flex;
	flex-direction: row;
	justify-content: center;
	align-items: center;
	padding: 0px 0px;
	gap: 8px;
	top: 0%;
	margin-left: 100px;
}
.login_center {
	background-color: white;
	border: 0px;
	border-radius: 8px;
	cursor: pointer;
	/* as a container */
	display: inline-flex;
	flex-direction: row;
	justify-content: center;
	align-items: center;
	padding: 16px 16px;
	gap: 8px;
	margin-left:43%;
	margin-top:21%;
}
.signout_navbar {
	position: absolute;
	z-index: 10;
	border-radius: 0px;
	background-color: #FFFFFF;
	cursor: pointer;
	font-size: large;
	height: 38px;
	width: 180px;
	/* as a container */
	display: inline-flex;
	flex-direction: row;
	justify-content: center;
	align-items: center;
	padding: 0px 0px;
	gap: 8px;
	top: 0%;
	margin-left: 250px;
}


/* UploadPage WaitingRoom */

.UploadWaitingRoom {
	height: calc(100vh - 40px); /* minus height of Navbar */
	/* as an item */
	align-self: stretch;
	flex-grow: 1;
	/* as a container */
	display: flex;
	flex-direction: column;
	align-items: flex-start;
}

.UploadControl {
	/*position: absolute;
	left: 0;
	top: 0;*/
	/* as an item */
	align-self: stretch;
	/* as a container */
	background-color: var(--white);
	display: flex;
	flex-direction: row;
	justify-content: space-between;
	align-items: center;
	padding: 24px 40px;
}

.UploadControl_addpic_div {
	/* as a container */
	display: flex;
	flex-direction: row;
	align-items: center;
	gap: 24px;
}

.UploadControl_addpic {
	/* as a container */
	display: flex;
	flex-direction: row;
	align-items: center;
	gap: 8px;
	/* border styling
	border: 2px dashed var(--gray-bg); border-radius: 8px;
	border-image: url("../assets/DashedBorder_small.svg") 30% / 14px / 8px round; */
}

.UploadControl_addpic_bigbox { /* reference: https://developer.mozilla.org/en-US/docs/Web/CSS/border-image */
	/* as an item */
	align-self: stretch;
	position: absolute;
	transform: translate(-50%, -50%); top: 50%; left: 50%; /* centerize */
	width: 70%; min-width: 400px;
	height: 80%;
	/* as a container */
	display: flex;
	flex-direction: row;
	align-items: center;
	justify-content: center;
	gap: 16px;
	/* border styling */
	border: 2px dashed var(--gray-bg); border-radius: 20px; /* specify a separate border-style in case the border image fails to load */
	border-image:
		url("../assets/DashedBorder_big.svg") /* source */
		30% /* slice = border width Ã· src img width */ /
		26px /* width = border width (above) */ /
		0px /* outset: distance from the div border */
		round /* repeat: round = round up to full dashes */
	;
}

.AddPicBigBox_cover {
	position: absolute;
	top: 0; left: 0;
	width: 100%; height: 100%;
}

.AddPicBigBox_notification {
	position: absolute;
	transform: translate(-50%, -50%);
	left: 50%; top: 24px;
	width: 100%; text-align: center;
}

.UploadControl_uploadpic_div {  /* right now same as UploadControl_addpic */
	/* as a container */
	display: flex;
	flex-direction: row;
	align-items: center;
	gap: 24px;
}

.WaitingRoom {
	/* as an item */
	align-self: stretch;
	flex-grow: 1;
	/* as a container */
	background-color: var(--gray-bg); /* matches with About page */
	position: relative;
	overflow-y: scroll;
}

.WaitingPic_container {
	position: relative;
	overflow: visible;
}

.WaitingPic {
	width: 100%;
	/*max-width: var(--pic-width);
	max-height: 200px;*/
	object-fit: contain;
	cursor: pointer;
}
.WaitingPic[src=""] {
	display: none;
}

.WaitingPicProgress {
	position: absolute;
	top: 4px;
	left: 4px;
}

.WaitingPicProgressBar {
	width: 40px;
	height: 40px;
}

.WaitingPicRemover_innercontainer {
	padding: 0px;
	background-color: var(--white);
	border-radius: 50%;
	z-index: 1;
}

.WaitingPicRemover_outercontainer { /* an invidible outer container to adjust position of the remove button and improve selecting experience */
	position: absolute;
	transform: translate(50%, -50%); top: 0px; right: 0px;
	display: none;
	/*display: inline-flex; /*DEBUG*/
	padding: 16px; /* modify this range according to achieve the best experience */
	border-radius: 50%;
	z-index: 1;
}

.WaitingPic_container:hover .WaitingPicRemover_outercontainer {
	display: inline-flex;
}

.WaitingPicRemover_innercontainer:hover .WaitingPicRemover {
	filter: invert(40%); /* brighten black img upon hover */
}


/* PopUp Labeling Window */

.PopUpOverlay {
	position: fixed;
	z-index: 12;
	width: 100%;
	height: 100%;
	background-color: #00000080; /* #XXXXXX80 = 50% opacity */
	backdrop-filter: blur(8px);
	-webkit-backdrop-filter: blur(8px);
}

.UploadPopUpModal {
	/* as a container */
	display: flex;
	background-color: white;
	border-radius: 10px;
	overflow: hidden; /* to apply border-radius to all inner elements */
	border: 2px solid var(--img-container-bg);
	width: 100%;
	height: 100%;
}

.UploadPopUpModal_container {
	position: absolute;
	/* centerize absolute-postion element */
	transform: translate(-50%, -50%);
	left: 50%;
	top: calc(50% - 20px); /* to make up for the height of Navbar (40px) */
	width: 70%;
	height: 80%;
	min-width: 800px;
}

.UploadPopUpPic {
	display: block;
	/*height: 100%;
	width: 100%;*/
	max-height: 100%;
	max-width: 100%;
	object-fit: contain;
	position: absolute;
	transform: translate(-50%, -50%); top: 50%; left: 50%;
}

.UploadPopUpCanvas {
	position: absolute;
	transform: translate(-50%, -50%); top: 50%; left: 50%;
	z-index: 1;
}

.UploadPopUpPic_outercontainer {
	/* as an item */
	flex-grow: 1;
	/* as a container */
	background-color: var(--img-container-bg);
	padding: 10px;
}
.UploadPopUpPic_innercontainer {
	/* as an item */
	height: 100%;
	width: 100%;
	/* as a container */
	position: relative;
	background-color: var(--img-container-bg);
}

.PopUpClose {
	position: absolute;
	transform: translateX(100%);
	right: -24px;
	bottom: 2px; /* to make up for the width of the border of PopUpModal (2px) */
}
.PopUpClose:hover {
	filter: brightness(120%);
}


/* AnnotationForm */

.AnnotationForm {
	overflow-y: scroll;
	width: 40%;
	max-width: 640px;
	min-width: 400px;
	max-height: 100%;
	border-left: 1px solid var(--gray-mid); /* TODO: dropshadow */
	/* as an item */
	flex-grow: 0;
	/* as a container */
	background-color: var(--white);
	display: flex;
	flex-direction: column;
	align-items: flex-start;
}

.FormCategory {
	border-bottom: 1px solid var(--gray-mid);
	/* as an item */
	align-self: stretch;
	/* as a container */
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	padding: 24px;
	gap: 16px;
}

.CategoryHeader {
	/* as a container */
	display: flex;
	flex-direction: row;
	align-items: center;
	gap: 8px;
}

.CategoryName {
	/* as an item */
	flex: 0 0 auto; /* no wrap */
	/* font */
	font-family: "Google Sans",Roboto,Arial,sans-serif;
	font-style: normal;
	font-weight: 500;
	font-size: var(--header-font-size);
	line-height: 120%;
	letter-spacing: 0.01em;
	filter: brightness(80%); /* darkern the colors a bit for readability */
	/* as a container */
	display: inline-flex;
	flex-direction: row;
	align-items: flex-start;
	gap: 2px;
}

.CategoryIcon {
	height: 24px;
	width: 24px; /* height and width according to CategoryIcons */
	background-color: var(--categoryicon-color, var(--black));  /* default color: black */
}
.CategoryIcon_Location {
	mask-image: url("../assets/CategoryIcon_Location@2x.png");
	-webkit-mask-image: url("../assets/CategoryIcon_Location@2x.png");
	mask-size:contain;
	-webkit-mask-size:contain;
}
.CategoryIcon_Spectators {
	mask-image: url("../assets/CategoryIcon_Spectators@2x.png");
	-webkit-mask-image: url("../assets/CategoryIcon_Spectators@2x.png");
	mask-size:contain;
	-webkit-mask-size:contain;
}
.CategoryIcon_Demographic {
	mask-image: url("../assets/CategoryIcon_Demographic@2x.png");
	-webkit-mask-image: url("../assets/CategoryIcon_Demographic@2x.png");
	mask-size:contain;
	-webkit-mask-size:contain;
}
.CategoryIcon_Modality {
	mask-image: url("../assets/CategoryIcon_Modality@2x.png");
	-webkit-mask-image: url("../assets/CategoryIcon_Modality@2x.png");
	mask-size:contain;
	-webkit-mask-size:contain;
}
.CategoryIcon_Posture {
	mask-image: url("../assets/CategoryIcon_Posture@2x.png");
	-webkit-mask-image: url("../assets/CategoryIcon_Posture@2x.png");
	mask-size:contain;
	-webkit-mask-size:contain;
}

.FormSubcategories {  /* container for all subcategories */
	/* as an item */
	align-self: stretch;
	/* as a container */
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	gap: 16px;
}

.FormSubcategory {
	/* as an item */
	align-self: stretch;
	/* as a container */
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	gap: 8px;
}

.SubcategoryHeader {  /* right now same as CategoryHeader */
	/* as a container */
	display: flex;
	flex-direction: row;
	align-items: center;
	gap: 8px;
}

.SubcategoryName {
	/* as an item */
	flex: 0 0 auto; /* no wrap */
	/* font */
	font-family: "Google Sans",Roboto,Arial,sans-serif;
	font-style: normal;
	font-weight: 400;
	font-size: var(--body-font-size);
	line-height: 120%;
	letter-spacing: 0.01em;
	color: var(--gray-dark);
	/* as a container */
	display: inline-flex;
	flex-direction: row;
	align-items: flex-start;
	gap: 2px;
}


/* ExploreGallery */

.ExploreSearchBar {
	/* as an item */
	align-self: stretch;
	/* as a container */
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	padding: 8px 12px;
	background: var(--white);
	border: 1px solid var(--gray-mid);
	border-radius: 8px;
	gap: 8px;
}

.ExploreGallery {
	height: calc(100vh - 40px); /* minus height of Navbar */
	/* as an item */
	flex-grow: 1;
	/* as a container */
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	background-color: var(--gray-bg);
	/* for masonry layout */
	overflow-x: hidden;
	min-width: calc(2 * var(--pic-width) + 24px + 2 * 40px); /* minimal two columns */
}

.ExplorePic {
	width: 100%;
	/*max-width: var(--pic-width);
	max-height: 200px;*/
	object-fit: contain;
	cursor: pointer;
}
.ExplorePic[src=""] {
	display: none;
}
.ExplorePic_selected {
	outline: 4px solid var(--img-container-bg);
}

.ExploreGalleryHeader {
	/* as an item */
	align-self: stretch;
	/* as a container */
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	padding: 24px 40px;
	gap: 16px;
	border-bottom: 1px solid var(--gray-mid);
}

.AppliedFilters {
	/* as an item */
	align-self: stretch;
	/* as a container */
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	gap: 16px;
}
.AppliedFilters_collapsed {
	flex-direction: row;
	align-items: center;
}

.AppliedFilters_hinttext {
	flex-grow: 0;
	flex-shrink: 0;
}

.AppliedFiltersList {
	/* as a container*/
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	align-content: flex-start;
	gap: 16px;
}

.AppliedFiltersList_collapsed {
	flex-grow: 1;
	overflow-x: hidden;
	/*overflow-x: scroll; /*DEBUG*/
	flex-wrap: nowrap;
	text-overflow: ellipsis;
	white-space: nowrap;
	max-height: 28px; /* label height */
}

.AppliedFilters_btns_div {
	/* as an item */
	flex-grow: 0;
	flex-shrink: 0;
	height: 0; /* ignore btn height in the row */
	/* as a container */
	display: flex;
	flex-direction: row;
	align-items: center;
	gap: 32px;
}

.AppliedFilters_rearrange_btns_div {
	/* as an item */
	flex-grow: 0;
	flex-shrink: 0;
	height: 0; /* ignore btn height in the row */
	/* as a container */
	display: flex;
	flex-direction: row;
	align-items: center;
	gap: 16px;
}

.DraggableLabel {
	cursor: grab;
}
.DraggableLabel:hover {
	box-shadow:
		0px 4px 8px rgba(170, 170, 170, 0.16),
		0px 0px 16px rgba(170, 170, 170, 0.08);
}

.LabelWithPriorityNum {
	/* as a container */
	display: flex;
	flex-direction: row;
	align-items: center;
	gap: 4px;
}

.AppliedFilters_bins {
	/* as an item */
	align-self: stretch;
	/* as a container */
	display: flex;
	flex-direction: row;
	align-content: flex-start;
	gap: 24px;
	min-height: 80px;
}

.AppliedFilters_bin {
	/* as an item */
	align-self: stretch;
	flex-grow: 1;
	border-radius: 8px;
	/* as a container */
	display: flex;
	flex-direction: column;
	align-content: flex-start;
	padding: 8px;
	gap: 8px;
}

.AppliedFilters_bin_must {
	background-color: var(--img-container-bg);
}

.AppliedFilters_bin_optional {
	background-color: var(--white);
}


/* Facet */

.FacetMenu {
	height: calc(100vh - 40px); /* minus height of Navbar */
	/*border-right: 1px solid var(--gray-mid);*/
	box-shadow:
		8px 0px 16px rgba(170, 170, 170, 0.16),
		0px 0px 40px 8px rgba(204, 204, 204, 0.25);
	/* as an item */
	flex: 1 0 20vw;
	max-width: 400px;
	min-width: 320px;
	/* as a container (module layout) */
	background-color: var(--white);
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	justify-content: space-between;
	z-index: 1;
	position: relative;
}

.ExploreSearchSection {
	flex-grow: 1;
}

.Facet {
	overflow-y: scroll;
	/* as an item */
	align-self: stretch;
}

.FacetOverlay {
	position: absolute;
	z-index: 2;
	top: 0; left: 0;
	width: 100%; height: 100%;
	background-color: #00000080; /* #XXXXXX80 = 50% opacity */
}

.FacetAttentiveSlider {
	/* as an item */
	align-self: stretch;
	/* as a container */
	display: flex;
	position: relative;
	margin: 8px;
}
.FacetAttentiveSlider_rail {
	content: "";
	position: absolute;
	border-bottom: 2px solid var(--gray-mid);
	height: 0px;
	transform: translateY(-50%);
	left: 0px; right: 0px;
}
.FacetAttentiveSlider_track {
	content: "";
	position: absolute;
	border-bottom: 2px solid var(--gray-solid);
	height: 0px;
	transform: translateY(-50%);
	left: 0px; right: 0px; /*default*/
}


/* ExploreDetails */

.ExploreDetailsMenu {
	height: calc(100vh - 40px); /* minus height of Navbar */
	/*border-left: 1px solid var(--gray-mid);*/
	box-shadow:
		0px 8px 16px rgba(170, 170, 170, 0.16),
		0px 0px 40px 8px rgba(204, 204, 204, 0.25);
	/* as an item */
	flex: 1 0 30vw;
	max-width: 640px;
	min-width: 320px;
	/* as a container (module layout) */
	background-color: var(--white);
	position: relative;
	display: flex;
	flex-direction: column;
	align-items: center;
	gap: 24px;
	z-index: 1;
}

.ExploreDetailsPic_container {
	/* as an item */
	align-self: stretch;
	/* as a container */
	position: relative;
	flex: 0 0 320px;
	background: var(--img-container-bg);
	border: 4px solid var(--img-container-bg);
}

.ExploreDetailsPic {
	position: absolute;
	max-width: 100%;
	max-height: 100%;
	transform: translate(-50%, -50%); top: 50%; left: 50%;
}

.ExploreDetailsPicCanvas {
	position: absolute;
	transform: translate(-50%, -50%); top: 50%; left: 50%;
}

.ExploreDetailsCloseBtn_container {
	position: absolute;
	top: 8px;
	left: 8px;
	padding: 8px;
	background-color: var(--img-container-bg);
	border-radius: 50%;
	z-index: 1;
}

.ExploreDetailsCloseBtn:hover {
	filter: invert(40%); /* brighten black img upon hover */
}

.DetailsLabels_container {
	/* as an item */
	align-self: stretch;
	flex-grow: 0;
	/* as a container */
	padding: 0px 24px;
	overflow-y: scroll;
}

.DetailsLabels {
	/* as an item */
	align-self: stretch;
	/* as a container */
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	margin-bottom: 24px; /* make sure the last labels won't be stucked on the bottom of screen */
	gap: 24px;
}

.DetailsCategory {
	/* as an item */
	align-self: stretch;
	/* as a container */
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	gap: 8px;
}

.DetailsCategoryIcon {
	height: 18px; width: 18px; /* height and width according to CategoryIcons@75%x */
	background-color: var(--gray-dark);
}
.CategoryIcon_Location_small {
	mask-image: url("../assets/CategoryIcon_Location@2x.png");
	-webkit-mask-image: url("../assets/CategoryIcon_Location@2x.png");
	mask-size:contain;
	-webkit-mask-size:contain;
}
.CategoryIcon_Spectators_small {
	mask-image: url("../assets/CategoryIcon_Spectators@2x.png");
	-webkit-mask-image: url("../assets/CategoryIcon_Spectators@2x.png");
	mask-size:contain;
	-webkit-mask-size:contain;
}
.CategoryIcon_Demographic_small {
	mask-image: url("../assets/CategoryIcon_Demographic@2x.png");
	-webkit-mask-image: url("../assets/CategoryIcon_Demographic@2x.png");
	mask-size:contain;
	-webkit-mask-size:contain;
}
.CategoryIcon_Modality_small {
	mask-image: url("../assets/CategoryIcon_Modality@2x.png");
	-webkit-mask-image: url("../assets/CategoryIcon_Modality@2x.png");
	mask-size:contain;
	-webkit-mask-size:contain;
}
.CategoryIcon_Posture_small {
	mask-image: url("../assets/CategoryIcon_Posture@2x.png");
	-webkit-mask-image: url("../assets/CategoryIcon_Posture@2x.png");
	mask-size:contain;
	-webkit-mask-size:contain;
}

.CollapsedMenu {
	cursor: pointer;
	height: calc(100vh - 40px); /* minus height of Navbar */
	width: 40px;
	flex-grow: 0;
	/* as a container (module layout) */
	background-color: var(--gray-bg);
	position: relative;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: flex-start;
	padding: 0 8px;
	gap: 8px;
}

.CollapsedMenuText {
	display: flex;
	writing-mode: vertical-lr; /* reference: https://stackoverflow.com/questions/45787013/vertical-text-in-flexbox-layout */
	writing-mode: tb-lr;
	color: var(--gray-dark);
}


/* Navbar */

.Navbar {
	position: fixed;
	left: 0px;
	top: 0px;
	height: 40px;
	width: 100vw;
	/* as a container */
	display: flex;
	flex-direction: row;
	justify-content: flex-end;
	align-items: center;
	padding: 0px 40px;
	gap: 64px;
	background: var(--white);
	z-index: 10;
	border-bottom: 1px solid var(--gray-mid);
}

.Navtab {
	/* as an element */
	flex-grow: 0;
	/* as a container */
	display: inline-flex;
	justify-content: center;
	align-items: center;
	padding: 4px;
	/* font */
	font-family: "Google Sans",Roboto,Arial,sans-serif;
	font-style: normal;
	font-weight: 400;
	font-size: var(--header-font-size);
	line-height: 150%;
	letter-spacing: 0.01em;
	color: var(--black);
	text-decoration-line: none;

}
.Navtab.active {
	font-weight: 700;
	letter-spacing: 0.003em;
	text-decoration-line: underline;
}

/* About Page*/

.AboutPageBox {
	background-color: var(--gray-bg);
}

.Stats {
	margin-top: 50px;
	display: flex;
	position: relative;
	height: 325px;
}

.HistoryTitle {
	margin-top: 0px;
	display: flex;
	position: relative;
	height: 50px;
}

.HistoryTitle h5 {
	margin-top: 80px;
	margin-left: 400px;
	margin-right: 100px;
}

.LineChart {
	margin-top: 80px;
	margin-left: 100px;
	margin-right: 50px;
}

/* .BarChar {
	margin-left: 1200px;
} */

.Vis {
	margin-top: 0px;
	display: flex;
	position: relative;
	height: 400px;
}

/* .VisBar {
	margin-top: 0px;
	display: flex;
	position: relative;
	height: 400px;
} */

.RoleBar {
	margin-left: 1100px;
	margin-top: 50px;
	margin-bottom: 150px;
}

.Age{
	margin-left: 800px;
	margin-top: 100px;
	height: 250px;
	width: 250px;
}

.Pie {
	margin-top: 100px;
	margin-left: 80px;
	height: 250px;
	width: 250px;
}

.Intro {
	margin-top: 250px;
	display: flex;
	position: relative;
	height: 80px;
}

.Intro img {
	margin-top: 0px;
	margin-left: var(--pic-width);
	width: 150px;
	height: auto;
	align-self: center;
}

.Intro h5 {
	align-self: flex-start;
	margin-top: 25px;
	margin-left: 50px;
	font-size: 40px;
	font-weight: bold;
}

.IntroText {
	margin-top: -50px;
	width: 50%;
	line-height: 200%;
	margin-left: auto;
	margin-right: auto;
	width: 55em;
}

.Problems {
	margin-top: 100px;
	position: relative;
	height: 1300px;
}

.Problems h5 {
	margin-top: 200px;
	margin-left: var(--pic-width);
	font-size: 40px;
	font-weight: bold;
}

.Box {
	-webkit-border-radius: 20px;
	-moz-border-radius: 20px;
	border-radius: 20px;
	overflow: hidden;
	width: 700px;
	height: 350px;
	margin-top: 50px;
	margin-left: auto;
	margin-right: auto;
	background-color: var(--gray-bg);
}

.Box p {
	margin-left: auto;
	margin-right: auto;
	margin-top: 20px;
	width: 40em;
	line-height: 200%;
}

.Sample {
	margin-top: 0px;
	display: flex;
	position: relative;
	flex-direction: column;
	height: 80px;
}

/* Create two equal columns that floats next to each other */
.column {
	float:left;
	flex: 25%;
	padding: 10px;
}

.column img {
	margin-top: 20px;
}

/* Clear floats after the columns */
.row {
	display: flex;
	flex-wrap: wrap;
	padding: 0 4px;
}

.Sample h5 {
	align-self: flex-start;
	margin-top: 25px;
	margin-left: 100px;
	font-size: 40px;
	font-weight: bold;
}

.Team {
	margin-top: 50px;
	display: flex;
	position: relative;
	height: 474px;
}

.Team h5 {
	margin-left: 200px;
	margin-top: 100px;
	font-size: 45px;
	font-weight: bold;
}

.Contributor {
	margin-top: 100px;
	margin-left: 400px;
	width: 150px;
	height: auto;
	align-self: center;
}

.ContributorTitle{
	margin-left: -25px;
	font-size: 25px;
	font-weight: bold;
}

.Contributor p {
	margin-left: 25px;
	color: #174ea6;
}

.Contributor h1 {
	margin-left: 25px;
	font-size: 30px;
}

.Images {
	margin-top: 100px;
	margin-left: 150px;
	width: 150px;
	height: auto;
	align-self: center;
}

.ImageTitle {
	margin-left: 0px;
	font-size: 25px;
	font-weight: bold;
}

.Images p {
	margin-left: 25px;
	color: #ED5564;
}

.Images h1 {
	margin-left: 0px;
	font-size: 30px;
}

.Locations {
	margin-top: 100px;
	margin-left: 150px;
	width: 150px;
	height: auto;
	align-self: center;
}

.LocationTitle {
	margin-left: -10px;
	font-size: 25px;
	font-weight: bold;
}

.Locations h1 {
	margin-left: 20px;
	font-size: 30px;
}

.Locations p {
	margin-left: 30px;
	color: #A0D568;
}

.userinfo {
	flex-direction: row;
}

.ProfilePic {
	border-radius: 50%;
	width: 30px;
	margin: 1%;
}

/* .Visbutton {
	z-index: 1000;
	margin-left: auto; 
	margin-right: 0;
	/* background: var(--gray-light); */ 


.Visbutton {
	margin-left: auto; 
	margin-right: 0;
    font-size: 0.8em;
    font-weight: bold;
    line-height: 1;
    text-transform: uppercase;
    position: relative;
    border: 0.18em solid;
    padding: 0.3em;
	color: #3b68c1;
    background: transparent;
    border-radius: .125em;
    transition: .3s;
}

.Visbutton:hover, .Visbutton:focus {
	color: white;
	background: #3b68c1;
	border-color: #3b68c1;
} 

.Visbutton:hover .statIcon{
    filter: invert(100%) sepia(0%) saturate(0%) hue-rotate(309deg) brightness(104%) contrast(101%);  
}

.Visbutton:focus .statIcon{
    filter: invert(100%) sepia(0%) saturate(0%) hue-rotate(309deg) brightness(104%) contrast(101%);  
}

.statIcon {
	height: 25px;
	width: 25px;
	filter: invert(35%) sepia(52%) saturate(1384%) hue-rotate(194deg) brightness(92%) contrast(84%);
}

.popup-content {
	margin: auto;
	display: flex;
	background: rgb(255, 255, 255);
	width: 1200px;
	height: 700px;
	padding: 5px;
}

.column1 {
	width: 40%;
	height: 100%;
}

.column1 h5 {
	color: #5A5A5A;
	text-align: center;
	margin-left: auto;
	margin-right: auto;
}

.column2 {
	width: 40%;
	height: 100%;
}

.column2 h5 {
	color: #5A5A5A;
	text-align: center;
	margin-left: auto;
	margin-right: auto;
}

.column3 {
	width: 20%;
	height: 100%;
}

.column3 h5 {
	color: #5A5A5A;
}

.Human_container {
	/*margin-top: -275px; /* to correct for the top margin caused by svg? TODO: improve*/
	position: relative;
	height: 250px;
	width: 250px;
	margin-left: -46.5px; /*TODO*/
}

/* reference: https://stackoverflow.com/questions/6300635/how-to-make-an-element-transparent-to-clicks-but-still-visible */
.Human_outline {
	position: absolute;
	margin-left: 20px;
	top: 36px;
	/*top: 278px;*/
	z-index: 1;
	pointer-events: none;
	/*height: 120%;
	width: auto;*/
}

.Human_highlight {
	position: absolute;
	width: 250px;
	padding-top: 10px;
	height: 250px;
	display: block;
	margin: 40px auto;
	margin-left: 86.7px;
}

.head {
	margin-left: -25.4px;
	top: -5px;
	position:absolute
}
.l_arm {
	margin-left: -50px;
	top: 58px;
	position:absolute
}
.r_arm {
	margin-left: 13.5px;
	top: 58px;
	position:absolute
}
.l_hand {
	margin-left: -66.7px;
	top: 109px;
	position:absolute
}
.r_hand {
	margin-left: 36.5px;
	top: 109px;
	position:absolute
}
.facial_expression {
	margin-left: -17.5px;
	top: 1px;
	position:absolute
}
.eyes {
	margin-left: -15.5px;
	top: 20px;
	position:absolute
}
.voice {
	margin-left: -9.5px;
	top: 38px;
	position:absolute
}
.legs {
	margin-left: -25.4px;
	top: 120px;
	position:absolute
}
.feet {
	margin-left: -26.5px;
	top: 215px;
	position:absolute
}